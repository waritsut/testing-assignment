// Code generated by MockGen. DO NOT EDIT.
// Source: cashier-service/internal/transactions/cashier_transaction (interfaces: Transaction)

// Package mock_cashier_transaction is a generated GoMock package.
package mock_cashier_transaction

import (
	structs "cashier-service/internal/structs"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTransaction is a mock of Transaction interface.
type MockTransaction struct {
	ctrl     *gomock.Controller
	recorder *MockTransactionMockRecorder
}

// MockTransactionMockRecorder is the mock recorder for MockTransaction.
type MockTransactionMockRecorder struct {
	mock *MockTransaction
}

// NewMockTransaction creates a new mock instance.
func NewMockTransaction(ctrl *gomock.Controller) *MockTransaction {
	mock := &MockTransaction{ctrl: ctrl}
	mock.recorder = &MockTransactionMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTransaction) EXPECT() *MockTransactionMockRecorder {
	return m.recorder
}

// CalTheChangeTransaction mocks base method.
func (m *MockTransaction) CalTheChangeTransaction(arg0 structs.RequestCalTheChangeMoney) (structs.CashStruct, structs.CashStruct, float64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CalTheChangeTransaction", arg0)
	ret0, _ := ret[0].(structs.CashStruct)
	ret1, _ := ret[1].(structs.CashStruct)
	ret2, _ := ret[2].(float64)
	ret3, _ := ret[3].(error)
	return ret0, ret1, ret2, ret3
}

// CalTheChangeTransaction indicates an expected call of CalTheChangeTransaction.
func (mr *MockTransactionMockRecorder) CalTheChangeTransaction(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CalTheChangeTransaction", reflect.TypeOf((*MockTransaction)(nil).CalTheChangeTransaction), arg0)
}
